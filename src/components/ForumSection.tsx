import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { 
  MessageSquare, 
  ThumbsUp, 
  Eye, 
  Clock, 
  Search,
  Plus,
  User,
  CheckCircle,
  AlertCircle,
  HelpCircle
} from "lucide-react";

export const ForumSection = () => {
  const [searchQuery, setSearchQuery] = useState("");
  const [showNewQuestion, setShowNewQuestion] = useState(false);

  const forumPosts = [
    {
      id: 1,
      title: "L√†m th·∫ø n√†o ƒë·ªÉ h·ªçc hi·ªáu qu·∫£ m√¥n MAD101?",
      content: "M√¨nh ƒëang g·∫∑p kh√≥ khƒÉn v·ªõi m√¥n MAD101, c√≥ ai c√≥ kinh nghi·ªám h·ªçc m√¥n n√†y kh√¥ng? Chia s·∫ª tips v·ªõi m√¨nh nh√©!",
      author: "NguyenVanA",
      category: "MAD101",
      replies: 8,
      views: 156,
      likes: 12,
      timeAgo: "2 gi·ªù tr∆∞·ªõc",
      status: "answered",
      isSticky: true
    },
    {
      id: 2,
      title: "Source code b√†i t·∫≠p PRO192 c√≥ ƒë·∫ßy ƒë·ªß kh√¥ng?",
      content: "M√¨nh c·∫ßn source code cho c√°c b√†i t·∫≠p PRO192, kh√¥ng bi·∫øt c√≥ ƒë·∫ßy ƒë·ªß t·∫•t c·∫£ c√°c lab kh√¥ng?",
      author: "TranThiB",
      category: "PRO192",
      replies: 15,
      views: 289,
      likes: 23,
      timeAgo: "4 gi·ªù tr∆∞·ªõc",
      status: "answered"
    },
    {
      id: 3,
      title: "Coursera certificate c√≥ ƒë∆∞·ª£c c√¥ng nh·∫≠n kh√¥ng?",
      content: "M·ªçi ng∆∞·ªùi cho m√¨nh h·ªèi certificate t·ª´ Coursera c√≥ ƒë∆∞·ª£c c√°c c√¥ng ty c√¥ng nh·∫≠n kh√¥ng?",
      author: "LeVanC",
      category: "Coursera",
      replies: 6,
      views: 134,
      likes: 9,
      timeAgo: "6 gi·ªù tr∆∞·ªõc",
      status: "pending"
    },
    {
      id: 4,
      title: "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng ChatGPT Plus cho vi·ªác h·ªçc",
      content: "M√¨nh v·ª´a mua ChatGPT Plus, c√≥ ai c√≥ kinh nghi·ªám s·ª≠ d·ª•ng ƒë·ªÉ h·ªó tr·ª£ h·ªçc t·∫≠p kh√¥ng? Share tips nh√©!",
      author: "PhamThiD",
      category: "ChatGPT",
      replies: 22,
      views: 445,
      likes: 31,
      timeAgo: "8 gi·ªù tr∆∞·ªõc",
      status: "answered"
    },
    {
      id: 5,
      title: "L√†m th·∫ø n√†o ƒë·ªÉ pass FE v·ªõi ƒëi·ªÉm cao?",
      content: "S·∫Øp thi FE r·ªìi, m·ªçi ng∆∞·ªùi c√≥ kinh nghi·ªám g√¨ ƒë·ªÉ ƒë·∫°t ƒëi·ªÉm cao kh√¥ng? Chia s·∫ª kinh nghi·ªám v·ªõi m√¨nh!",
      author: "HoangVanE",
      category: "FE",
      replies: 34,
      views: 678,
      likes: 45,
      timeAgo: "1 ng√†y tr∆∞·ªõc",
      status: "answered"
    },
    {
      id: 6,
      title: "CANVA Pro c√≥ nh·ªØng t√≠nh nƒÉng g√¨ hay?",
      content: "ƒêang c√¢n nh·∫Øc mua CANVA Pro, c√≥ ai ƒë√£ s·ª≠ d·ª•ng ch∆∞a? C√≥ ƒë√°ng kh√¥ng?",
      author: "DinhThiF",
      category: "CANVA",
      replies: 12,
      views: 201,
      likes: 18,
      timeAgo: "1 ng√†y tr∆∞·ªõc",
      status: "pending"
    }
  ];

  const categories = [
    "T·∫•t c·∫£", "MAD101", "PRO192", "WED201", "Coursera", 
    "ChatGPT", "CANVA", "FE", "Kh√°c"
  ];

  const getStatusIcon = (status: string) => {
    switch (status) {
      case "answered":
        return <CheckCircle className="h-4 w-4 text-green-500" />;
      case "pending":
        return <HelpCircle className="h-4 w-4 text-orange-500" />;
      default:
        return <AlertCircle className="h-4 w-4 text-gray-500" />;
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case "answered":
        return "bg-green-100 text-green-800";
      case "pending":
        return "bg-orange-100 text-orange-800";
      default:
        return "bg-gray-100 text-gray-800";
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case "answered":
        return "ƒê√£ tr·∫£ l·ªùi";
      case "pending":
        return "Ch·ªù tr·∫£ l·ªùi";
      default:
        return "Ch∆∞a x·ª≠ l√Ω";
    }
  };

  return (
    <section className="py-20 px-4 bg-background" id="forum">
      <div className="max-w-7xl mx-auto">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold text-foreground mb-4">
            Di·ªÖn ƒë√†n h·ªèi ƒë√°p
          </h2>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
            N∆°i sinh vi√™n chia s·∫ª kinh nghi·ªám, ƒë·∫∑t c√¢u h·ªèi v√† h·ªó tr·ª£ l·∫´n nhau
          </p>
        </div>
        
        {/* Search and Actions */}
        <div className="flex flex-col md:flex-row gap-4 mb-8">
          <div className="relative flex-1">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
            <Input
              placeholder="T√¨m ki·∫øm c√¢u h·ªèi..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="pl-10"
            />
          </div>
          <Button 
            onClick={() => setShowNewQuestion(!showNewQuestion)}
            className="bg-primary hover:bg-primary/90"
          >
            <Plus className="h-4 w-4 mr-2" />
            ƒê·∫∑t c√¢u h·ªèi m·ªõi
          </Button>
        </div>

        {/* Categories */}
        <div className="flex flex-wrap gap-2 mb-8">
          {categories.map((category) => (
            <Badge
              key={category}
              variant="outline"
              className="cursor-pointer hover:bg-primary/10"
            >
              {category}
            </Badge>
          ))}
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-8">
          {/* Main Forum Content */}
          <div className="lg:col-span-3 space-y-4">
            {/* New Question Form */}
            {showNewQuestion && (
              <Card className="mb-6">
                <CardHeader>
                  <CardTitle className="text-lg">ƒê·∫∑t c√¢u h·ªèi m·ªõi</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <Input placeholder="Ti√™u ƒë·ªÅ c√¢u h·ªèi..." />
                  <Textarea 
                    placeholder="M√¥ t·∫£ chi ti·∫øt c√¢u h·ªèi c·ªßa b·∫°n..."
                    rows={4}
                  />
                  <div className="flex gap-2">
                    <Button size="sm">ƒêƒÉng c√¢u h·ªèi</Button>
                    <Button 
                      variant="outline" 
                      size="sm"
                      onClick={() => setShowNewQuestion(false)}
                    >
                      H·ªßy
                    </Button>
                  </div>
                </CardContent>
              </Card>
            )}

            {/* Forum Posts */}
            {forumPosts.map((post) => (
              <Card key={post.id} className="hover:shadow-lg transition-all duration-300">
                <CardContent className="p-6">
                  <div className="flex items-start gap-4">
                    <div className="flex-shrink-0">
                      <div className="w-10 h-10 rounded-full bg-primary/10 flex items-center justify-center">
                        <User className="h-5 w-5 text-primary" />
                      </div>
                    </div>
                    
                    <div className="flex-1 min-w-0">
                      <div className="flex items-center gap-2 mb-2">
                        {post.isSticky && (
                          <Badge variant="secondary" className="text-xs">
                            üìå Ghim
                          </Badge>
                        )}
                        <Badge variant="outline" className="text-xs">
                          {post.category}
                        </Badge>
                        <Badge className={`text-xs ${getStatusColor(post.status)}`}>
                          {getStatusIcon(post.status)}
                          <span className="ml-1">{getStatusText(post.status)}</span>
                        </Badge>
                      </div>
                      
                      <h3 className="font-semibold text-lg mb-2 hover:text-primary cursor-pointer">
                        {post.title}
                      </h3>
                      
                      <p className="text-muted-foreground text-sm mb-3 line-clamp-2">
                        {post.content}
                      </p>
                      
                      <div className="flex items-center justify-between text-sm text-muted-foreground">
                        <div className="flex items-center gap-4">
                          <span className="font-medium">{post.author}</span>
                          <div className="flex items-center gap-1">
                            <Clock className="h-3 w-3" />
                            {post.timeAgo}
                          </div>
                        </div>
                        
                        <div className="flex items-center gap-4">
                          <div className="flex items-center gap-1">
                            <MessageSquare className="h-4 w-4" />
                            {post.replies}
                          </div>
                          <div className="flex items-center gap-1">
                            <Eye className="h-4 w-4" />
                            {post.views}
                          </div>
                          <div className="flex items-center gap-1">
                            <ThumbsUp className="h-4 w-4" />
                            {post.likes}
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
            
            <div className="text-center mt-8">
              <Button variant="outline">
                Xem th√™m c√¢u h·ªèi
              </Button>
            </div>
          </div>
          
          {/* Sidebar */}
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Th·ªëng k√™ di·ªÖn ƒë√†n</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <div className="flex justify-between">
                  <span className="text-sm text-muted-foreground">T·ªïng c√¢u h·ªèi:</span>
                  <span className="font-semibold">1,234</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-muted-foreground">ƒê√£ tr·∫£ l·ªùi:</span>
                  <span className="font-semibold text-green-600">1,156</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-muted-foreground">Th√†nh vi√™n:</span>
                  <span className="font-semibold">1,000+</span>
                </div>
              </CardContent>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">C√¢u h·ªèi n·ªïi b·∫≠t</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                {forumPosts
                  .sort((a, b) => b.views - a.views)
                  .slice(0, 3)
                  .map((post) => (
                    <div key={post.id} className="border-b border-border last:border-0 pb-3 last:pb-0">
                      <h4 className="font-medium text-sm line-clamp-2 mb-1 hover:text-primary cursor-pointer">
                        {post.title}
                      </h4>
                      <div className="flex items-center gap-2 text-xs text-muted-foreground">
                        <span>{post.views} l∆∞·ª£t xem</span>
                        <span>‚Ä¢</span>
                        <span>{post.replies} tr·∫£ l·ªùi</span>
                      </div>
                    </div>
                  ))}
              </CardContent>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Quy t·∫Øc di·ªÖn ƒë√†n</CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="text-sm text-muted-foreground space-y-2">
                  <li>‚Ä¢ T√¥n tr·ªçng c√°c th√†nh vi√™n kh√°c</li>
                  <li>‚Ä¢ ƒê·∫∑t c√¢u h·ªèi r√µ r√†ng, c·ª• th·ªÉ</li>
                  <li>‚Ä¢ Kh√¥ng spam ho·∫∑c qu·∫£ng c√°o</li>
                  <li>‚Ä¢ Chia s·∫ª ki·∫øn th·ª©c t√≠ch c·ª±c</li>
                  <li>‚Ä¢ T√¨m ki·∫øm tr∆∞·ªõc khi ƒë·∫∑t c√¢u h·ªèi</li>
                </ul>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </section>
  );
};